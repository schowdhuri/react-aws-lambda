{"version":3,"sources":["client/store/index.js","client/utils/history.ts","client/reducers/loading.ts","constants/actions.ts","client/reducers/todos.ts","client/reducers/uiState.ts","client/reducers/index.ts","client/actions/index.ts","client/utils/awsLambda.ts","client/sagas/deleteTodo.ts","client/sagas/getTodos.ts","client/sagas/saveTodo.ts","client/sagas/updateTodo.ts","client/sagas/index.ts","client/components/CreateTodo.tsx","client/selectors/index.ts","client/utils/spinanim.ts","client/components/TodoList.tsx","client/components/App.tsx","client/index.tsx"],"names":["composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createBrowserHistory","basename","initialState","id","status","index","state","action","type","findIndex","taskId","slice","value","data","item","fakeId","filter","loadingTodos","deleting","uiStateReducer","createRootReducer","history","combineReducers","router","connectRouter","loading","todos","uiState","setLoading","saveTodoSuccess","todo","saveTodoFailure","error","updateTodoSuccess","deleteTodoFailure","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","Lambda","deleteTodo","invoke","Promise","resolve","reject","lambda","FunctionName","InvocationType","LogType","Payload","err","console","log","payload","JSON","parse","ex","put","call","stringify","response","text","takeEvery","getTodos","Items","saveTodo","updateTodo","all","Form","styled","form","TextBox","input","AddButton","button","CreateTodo","useState","name","setName","dispatch","useDispatch","createTodo","completed","shortId","generate","onSubmit","ev","preventDefault","onChange","target","placeholder","onClick","className","getUiState","spin","keyframes","LoadingTodos","div","css","List","ul","Item","li","Checkbox","label","props","ItemName","ItemActions","DeleteButton","TodoList","useSelector","useEffect","changeCompleted","find","map","key","reducer","middleware","Skeleton","Wrapper","Card","children","sagaMiddleware","createMiddleware","rootReducer","store","routerMiddleware","createStore","applyMiddleware","run","sagas","Component","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea9116f5.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\n\nconst composeEnhancers =\n  typeof window !== \"undefined\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n  process.env.NODE_ENV !== \"production\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nexport default function configureStore(reducer, middleware) {\n  const store = createStore(\n    reducer,\n    {},\n    composeEnhancers(applyMiddleware(...middleware))\n  );\n  return store;\n}\n","import { createBrowserHistory } from \"history\";\nconst isProd = process.env.NODE_ENV === \"production\";\n\nexport default createBrowserHistory({\n  basename: isProd ? \"/react-aws-lambda\" : \"\"\n});\n","import { IS_LOADING } from \"../../constants/actions\";\nimport { LoadingAction } from \"../../types/actions\";\n\nconst initialState: Array<string> = [];\n\nexport default (state = initialState, action: LoadingAction) => {\n  const { type } = action;\n  let id: string, status: boolean, index: number;\n  switch (type) {\n    case IS_LOADING:\n      id = action.id;\n      status = action.status;\n      index = state.findIndex(taskId => taskId === id);\n      if (status) {\n        return [...state, id];\n      } else if (index !== -1) {\n        return [...state.slice(0, index), ...state.slice(index + 1)];\n      }\n      break;\n\n    default:\n      return state;\n  }\n};\n","export const IS_LOADING             = \"IS_LOADING\";\nexport const LOGOUT                 = \"LOGOUT\";\nexport const SAVE_TODO              = \"SAVE_TODO\";\nexport const SAVE_TODO_OK           = \"SAVE_TODO_OK\";\nexport const SAVE_TODO_ERR          = \"SAVE_TODO_ERR\";\nexport const GET_TODO               = \"GET_TODO\";\nexport const GET_TODO_OK            = \"GET_TODO_OK\";\nexport const GET_TODO_ERR           = \"GET_TODO_ERR\";\nexport const UPDATE_TODO            = \"UPDATE_TODO\";\nexport const UPDATE_TODO_OK         = \"UPDATE_TODO_OK\";\nexport const UPDATE_TODO_ERR        = \"UPDATE_TODO_ERR\";\nexport const DEL_TODO               = \"DEL_TODO\";\nexport const DEL_TODO_OK            = \"DEL_TODO_OK\";\nexport const DEL_TODO_ERR           = \"DEL_TODO_ERR\";\nexport const GET_TODOS              = \"GET_TODOS\";\nexport const GET_TODOS_OK           = \"GET_TODOS_OK\";\nexport const GET_TODOS_ERR          = \"GET_TODOS_ERR\";\n","import * as ACTIONS from \"../../constants/actions\";\nimport Todo from \"../../types/todo\";\n\nconst initialState: Array<Todo> = [];\n\nexport default (state = initialState, action: any) => {\n  const { type } = action;\n\n  switch (type) {\n    case ACTIONS.GET_TODOS_OK:\n      return action.value;\n\n    case ACTIONS.SAVE_TODO:\n      return [action.data, ...state];\n\n    case ACTIONS.SAVE_TODO_OK: {\n      const index: number = state.findIndex((item) => item.id === action.fakeId);\n      if (index !== -1) {\n        return [\n          ...state.slice(0, index),\n          action.value,\n          ...state.slice(index + 1),\n        ];\n      }\n      break;\n    }\n\n    case ACTIONS.SAVE_TODO_ERR:\n      return state.filter((item) => item.id !== action.fakeId);\n\n    case ACTIONS.UPDATE_TODO: {\n      const value: Todo = action.value;\n      const index: number = state.findIndex((item) => item.id === value.id);\n      if (index !== -1) {\n        return [\n          ...state.slice(0, index),\n          action.value,\n          ...state.slice(index + 1),\n        ];\n      }\n      break;\n    }\n\n    case ACTIONS.DEL_TODO_OK:\n      return state.filter((item) => item.id !== action.value.id);\n  }\n  return state;\n};\n","import * as ACTIONS from \"../../constants/actions\";\nimport UIState from \"../../types/uistate\";\n\nconst initialState: UIState = {\n  loadingTodos: false,\n  deleting: [],\n};\n\nfunction uiStateReducer(state = initialState, action: any) {\n  switch (action.type) {\n    case ACTIONS.GET_TODOS:\n      return {\n        ...state,\n        loadingTodos: true,\n      };\n\n    case ACTIONS.GET_TODOS_ERR:\n    case ACTIONS.GET_TODOS_OK:\n      return {\n        ...state,\n        loadingTodos: false,\n      };\n\n    case ACTIONS.DEL_TODO:\n      return {\n        ...state,\n        deleting: [action.id, ...state.deleting],\n      };\n\n    case ACTIONS.DEL_TODO_OK:\n      return {\n        ...state,\n        deleting: state.deleting.filter((id) => action.value.id),\n      };\n\n    case ACTIONS.DEL_TODO_ERR:\n      return {\n        ...state,\n        deleting: state.deleting.filter((id) => !action.id),\n      };\n  }\n  return state;\n}\n\nexport default uiStateReducer;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport loading from \"./loading\";\nimport todos from \"./todos\";\nimport uiState from \"./uiState\";\n\nfunction createRootReducer(history: any) {\n  return combineReducers({\n    router: connectRouter(history),\n    loading,\n    todos,\n    uiState\n  });\n}\n\nexport default createRootReducer;\n","import shortId from \"shortid\";\nimport * as ACTIONS from \"../../constants/actions\";\nimport * as Types from \"../../types/actions\";\nimport Todo from \"../../types/todo\";\n\nexport const setLoading = (\n  id: string,\n  status: boolean\n): Types.LoadingAction => ({\n  type: ACTIONS.IS_LOADING,\n  id,\n  status,\n});\n\nexport const saveTodo = (data: Todo): Types.SaveTodoAction => ({\n  type: ACTIONS.SAVE_TODO,\n  data: {\n    ...data,\n    id: shortId.generate(), // fake ID for optimistic UI update\n  },\n});\n\nexport const saveTodoSuccess = (\n  todo: Todo,\n  fakeId: string\n): Types.SaveTodoSuccessAction => ({\n  type: ACTIONS.SAVE_TODO_OK,\n  value: todo,\n  fakeId,\n});\n\nexport const saveTodoFailure = (\n  error: string,\n  fakeId: string\n): Types.SaveTodoFailureAction => ({\n  type: ACTIONS.SAVE_TODO_ERR,\n  error,\n  fakeId,\n});\n\nexport const getTodo = (id: string): Types.GetTodoAction => ({\n  type: ACTIONS.GET_TODO,\n  id,\n});\n\nexport const getTodoSuccess = (value: Todo): Types.GetTodoSuccessAction => ({\n  type: ACTIONS.GET_TODO_OK,\n  value,\n});\n\nexport const getTodoFailure = (error: string): Types.FailureAction => ({\n  type: ACTIONS.GET_TODO_ERR,\n  error,\n});\n\nexport const updateTodo = (value: Todo): Types.UpdateTodoAction => ({\n  type: ACTIONS.UPDATE_TODO,\n  value,\n});\n\nexport const updateTodoSuccess = (\n  value: Todo\n): Types.UpdateTodoSuccessAction => ({\n  type: ACTIONS.UPDATE_TODO_OK,\n  value,\n});\n\nexport const updateTodoFailure = (error: string): Types.FailureAction => ({\n  type: ACTIONS.UPDATE_TODO_ERR,\n  error,\n});\n\nexport const deleteTodo = (id: string): Types.DeleteTodoAction => ({\n  type: ACTIONS.DEL_TODO,\n  id,\n});\n\nexport const deleteTodoSuccess = (\n  value: Todo\n): Types.DeleteTodoSuccessAction => ({\n  type: ACTIONS.DEL_TODO_OK,\n  value,\n});\n\nexport const deleteTodoFailure = (\n  error: string,\n  id: string\n): Types.DeleteTodoFailureAction => ({\n  type: ACTIONS.DEL_TODO_ERR,\n  error,\n  id,\n});\n\nexport const getTodos = () => ({\n  type: ACTIONS.GET_TODOS,\n});\n\nexport const getTodosSuccess = (\n  value: Todo[]\n): Types.GetTodosSuccessAction => ({\n  type: ACTIONS.GET_TODOS_OK,\n  value,\n});\n\nexport const getTodosFailure = (error: string): Types.FailureAction => ({\n  type: ACTIONS.GET_TODOS_ERR,\n  error,\n});\n","import AWS from \"aws-sdk\";\n\nAWS.config.region = \"us-east-1\";\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n  IdentityPoolId: \"us-east-1:f81f99c1-ed34-43b9-aba0-4e7555152c05\",\n});\n\nexport default new AWS.Lambda();\n","import { takeEvery, put, call } from \"redux-saga/effects\";\n\nimport { DEL_TODO } from \"../../constants/actions\";\nimport { setLoading, deleteTodoSuccess, deleteTodoFailure } from \"../actions\";\nimport lambda from \"../utils/awsLambda\";\nimport { DeleteTodoAction } from \"../../types/actions\";\n\nfunction invoke(data: string) {\n  return new Promise((resolve, reject) => {\n    lambda.invoke(\n      {\n        FunctionName: \"delete_todo\",\n        InvocationType: \"RequestResponse\",\n        LogType: \"None\",\n        Payload: data,\n      },\n      function(err: any, data: any) {\n        if (err) {\n          console.log({ err });\n          reject(err);\n        } else {\n          try {\n            const payload = JSON.parse(data.Payload);\n            resolve(payload);\n          } catch (ex) {\n            reject(ex);\n          }\n        }\n      }\n    );\n  });\n}\n\nfunction* deleteTodo(action: DeleteTodoAction) {\n  const { id } = action;\n  yield put(setLoading(DEL_TODO, true));\n  try {\n    const response: any = yield call(invoke, JSON.stringify({ id }));\n    console.log(response)\n    yield put(deleteTodoSuccess(response));\n  } catch (ex) {\n    console.log(ex);\n    yield put(deleteTodoFailure(ex.text, id));\n  }\n  yield put(setLoading(DEL_TODO, false));\n}\n\nexport default function*() {\n  yield takeEvery(DEL_TODO, deleteTodo);\n}\n","import { takeEvery, put, call } from \"redux-saga/effects\";\n\nimport { GET_TODOS } from \"../../constants/actions\";\nimport { setLoading, getTodosSuccess, getTodosFailure } from \"../actions\";\nimport lambda from \"../utils/awsLambda\";\nimport { GetTodosAction } from \"../../types/actions\";\n\nfunction invoke() {\n  return new Promise((resolve, reject) => {\n    lambda.invoke(\n      {\n        FunctionName: \"get_todos\",\n        InvocationType: \"RequestResponse\",\n        LogType: \"None\"\n      },\n      function(err: any, data: any) {\n        if (err) {\n          console.log({ err });\n          reject(err);\n        } else {\n          try {\n            const payload = JSON.parse(data.Payload);\n            resolve(payload.Items);\n          } catch(ex) {\n            reject(ex);\n          }\n        }\n      }\n    );\n  });\n}\n\nfunction* getTodos(action: GetTodosAction) {\n  yield put(setLoading(GET_TODOS, true));\n  try {\n    const response: any = yield call(invoke);\n    yield put(getTodosSuccess(response));\n  } catch (ex) {\n    console.log(ex);\n    yield put(getTodosFailure(ex.text));\n  }\n  yield put(setLoading(GET_TODOS, false));\n}\n\nexport default function*() {\n  yield takeEvery(GET_TODOS, getTodos);\n}\n","import { takeEvery, put, call } from \"redux-saga/effects\";\n\nimport { SAVE_TODO } from \"../../constants/actions\";\nimport { setLoading, saveTodoSuccess, saveTodoFailure } from \"../actions\";\nimport lambda from \"../utils/awsLambda\";\nimport { SaveTodoAction } from \"../../types/actions\";\n\nfunction invoke(data: string) {\n  return new Promise((resolve, reject) => {\n    lambda.invoke(\n      {\n        FunctionName: \"create_todo\",\n        InvocationType: \"RequestResponse\",\n        LogType: \"None\",\n        Payload: data,\n      },\n      function(err: any, data: any) {\n        if (err) {\n          console.log({ err });\n          reject(err);\n        } else {\n          try {\n            const payload = JSON.parse(data.Payload);\n            resolve(payload);\n          } catch (ex) {\n            reject(ex);\n          }\n        }\n      }\n    );\n  });\n}\n\nfunction* saveTodo(action: SaveTodoAction) {\n  const data = { ...action.data };\n  const fakeId: string = data.id!;\n  delete data.id;\n  yield put(setLoading(SAVE_TODO, true));\n  try {\n    const response: any = yield call(invoke, JSON.stringify(data));\n    yield put(saveTodoSuccess(response, fakeId));\n  } catch (ex) {\n    console.log(ex);\n    yield put(saveTodoFailure(ex.text, fakeId));\n  }\n  yield put(setLoading(SAVE_TODO, false));\n}\n\nexport default function*() {\n  yield takeEvery(SAVE_TODO, saveTodo);\n}\n","import { takeEvery, put, call } from \"redux-saga/effects\";\n\nimport { UPDATE_TODO } from \"../../constants/actions\";\nimport { setLoading, updateTodoSuccess, updateTodoFailure } from \"../actions\";\nimport lambda from \"../utils/awsLambda\";\nimport { UpdateTodoAction } from \"../../types/actions\";\n\nfunction invoke(data: string) {\n  return new Promise((resolve, reject) => {\n    lambda.invoke(\n      {\n        FunctionName: \"create_todo\",\n        InvocationType: \"RequestResponse\",\n        LogType: \"None\",\n        Payload: data,\n      },\n      function(err: any, data: any) {\n        if (err) {\n          console.log({ err });\n          reject(err);\n        } else {\n          try {\n            const payload = JSON.parse(data.Payload);\n            resolve(payload);\n          } catch (ex) {\n            reject(ex);\n          }\n        }\n      }\n    );\n  });\n}\n\nfunction* updateTodo(action: UpdateTodoAction) {\n  const { value } = action;\n  yield put(setLoading(UPDATE_TODO, true));\n  try {\n    yield call(invoke, JSON.stringify(value));\n    yield put(updateTodoSuccess(value));\n  } catch (ex) {\n    console.log(ex);\n    yield put(updateTodoFailure(ex.text));\n  }\n  yield put(setLoading(UPDATE_TODO, false));\n}\n\nexport default function*() {\n  yield takeEvery(UPDATE_TODO, updateTodo);\n}\n","import { all } from \"redux-saga/effects\";\n\nimport deleteTodo from \"./deleteTodo\";\nimport getTodos from \"./getTodos\";\nimport saveTodo from \"./saveTodo\";\nimport updateTodo from \"./updateTodo\";\n\nexport default function*() {\n  yield all([deleteTodo(), getTodos(), saveTodo(), updateTodo()]);\n}\n","import React, { FunctionComponent, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport * as actions from \"../actions/index\";\nimport \"./App.css\";\n\ninterface CreateTodoProps {}\n\nconst CreateTodo: FunctionComponent<CreateTodoProps> = () => {\n  const [name, setName] = useState(\"\");\n  const dispatch = useDispatch();\n  // handlers\n  const changeName = (ev: React.FormEvent<EventTarget>) => {\n    const target = ev.target as HTMLInputElement;\n    setName(target.value);\n  };\n  const createTodo = () => {\n    if (name) {\n      dispatch(actions.saveTodo({ name, completed: false }));\n      setName(\"\");\n    }\n  };\n  const onSubmit = (ev: React.FormEvent<EventTarget>) => {\n    ev.preventDefault();\n    createTodo();\n    return false;\n  };\n  // render\n  return (\n    <Form onSubmit={onSubmit}>\n      <TextBox\n        type=\"text\"\n        onChange={changeName}\n        value={name}\n        placeholder=\"What's next?\"\n      />\n      <AddButton onClick={createTodo}>\n        <i className=\"fa fa-plus\" />\n      </AddButton>\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  align-items: center;\n  display: flex;\n  margin-bottom: 2.5rem;\n`;\nconst TextBox = styled.input`\n  background: #e2e2e2;\n  border: none;\n  border-radius: 4px;\n  box-shadow: inset 8px 8px 16px #d7d7d7, inset -8px -8px 16px #ededed;\n  flex: 1;\n  font-size: 1.25rem;\n  padding: 1rem;\n  @media all and (min-width: 768px) {\n    font-size: 1.5rem;\n    padding: 2rem;\n  }\n`;\nconst AddButton = styled.button`\n  align-items: center;\n  background: #e2e2e2;\n  border: none;\n  border-radius: 50%;\n  box-shadow:  6px 6px 12px #d7d7d7,\n               -6px -6px 12px #ededed;\n  color: #17ab26;\n  display: flex;\n  font-size: 1.25rem;\n  justify-content: center;\n  height: 3rem;\n  margin-left: 1rem;\n  width: 3rem;\n  transition: background-color 0.2s, color 0.2s;\n\n  @media all and (min-width: 780px) {\n    height: 4rem;\n    width: 4rem;\n  }\n  &:active,\n  &:target {\n    background: #17ab26;\n    color: #e3e3e3;\n  }\n`;\n\nexport default CreateTodo;\n","import { RootState } from \"../../types/rootState\";\nimport UIState from \"../../types/uistate\";\nimport Todo from \"../../types/todo\";\n\nexport const isLoading = (state: RootState): boolean =>\n  Boolean(state.loading.length);\nexport const getTodos = (state: RootState): Todo[] => state.todos;\nexport const getUiState = (state: RootState): UIState => state.uiState;\n","import { css, keyframes } from \"styled-components\";\n\nconst spin = keyframes`\n  from {\n    transform:rotate(0deg);\n  }\n  to {\n    transform:rotate(360deg);\n  }\n`;\n\nexport default () => css`\n  animation: ${spin} 2s linear infinite;\n`;\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport * as actions from \"../actions/index\";\nimport Todo from \"../../types/todo\";\nimport UIState from \"../../types/uistate\";\nimport { getTodos, getUiState } from \"../selectors\";\nimport spin from \"../utils/spinanim\";\n\ninterface TodoListProps {}\n\ninterface CheckboxProps {\n  completed: boolean;\n  onClick?: any;\n}\n\ninterface ItemNameProps {\n  completed: boolean;\n}\n\nconst TodoList: FunctionComponent<TodoListProps> = () => {\n  const dispatch = useDispatch();\n  const todos: Todo[] = useSelector(getTodos);\n  const uiState: UIState = useSelector(getUiState);\n  useEffect(() => {\n    dispatch(actions.getTodos());\n  }, [dispatch]);\n  // handlers\n  const changeCompleted = (item: Todo) => () => {\n    dispatch(\n      actions.updateTodo({\n        ...item,\n        completed: !item.completed,\n      })\n    );\n  };\n  const deleteTodo = (item: Todo) => () => {\n    dispatch(actions.deleteTodo(item.id!));\n  };\n  // render\n  return uiState.loadingTodos ? (\n    <LoadingTodos>\n      <i className=\"fa fa-spinner\" />\n      Loading ...\n    </LoadingTodos>\n  ) : (\n    <List>\n      {todos\n        .filter((item) => !uiState.deleting.find((id) => id === item.id))\n        .map((item) => (\n          <Item key={item.id}>\n            <Checkbox\n              completed={item.completed}\n              onClick={changeCompleted(item)}\n            >\n              {!item.completed || <i className=\"fa fa-check\" />}\n            </Checkbox>\n            <ItemName\n              completed={item.completed}\n              onClick={changeCompleted(item)}\n            >\n              {item.name}\n            </ItemName>\n            <ItemActions>\n              <DeleteButton onClick={deleteTodo(item)}>\n                <i className=\"fa fa-times\" />\n              </DeleteButton>\n            </ItemActions>\n          </Item>\n        ))}\n    </List>\n  );\n};\n\nconst LoadingTodos = styled.div`\n  display: flex;\n  padding: 1rem;\n  .fa {\n    margin-right: 5px;\n    ${spin};\n  }\n`;\nconst List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\nconst Item = styled.li`\n  align-items: center;\n  display: flex;\n  padding: 1rem 0;\n  @media all and (min-width: 780px) {\n    padding: 1rem 0.5rem 1rem 0;\n  }\n  & + & {\n    border-top: solid 1px #eaeaea;\n  }\n`;\nconst Checkbox = styled.label<CheckboxProps>`\n  align-items: center;\n  background: #e2e2e2;\n  border-radius: 4px;\n  box-shadow: inset 6px 6px 12px #d7d7d7, inset -6px -6px 12px #ededed;\n  display: flex;\n  height: 2rem;\n  justify-content: center;\n  margin-right: 1rem;\n  width: 2rem;\n\n  ${(props) =>\n    props.completed\n      ? `\n      background-color: #17ab26;\n      box-shadow: inset 6px 6px 12px #16a224,\n            inset -6px -6px 12px #18b428;\n      color: #fff;\n    `\n      : ``}\n\n  input[type=\"checkbox\"] {\n    display: none;\n  }\n`;\nconst ItemName = styled.div<ItemNameProps>`\n  flex: 5;\n\n  ${props => props.completed\n    ? `\n      font-style: italic;\n      opacity: 0.7;\n      text-decoration: line-through;\n    `\n    : \"\"}\n`;\nconst ItemActions = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n`;\nconst DeleteButton = styled.button`\n  align-items: center;\n  background: #e2e2e2;\n  border: none;\n  border-radius: 50%;\n  box-shadow: 6px 6px 12px #d7d7d7, -6px -6px 12px #ededed;\n  color: #982929;\n  display: flex;\n  font-size: 1.25rem;\n  justify-content: center;\n  height: 3rem;\n  width: 3rem;\n  transition: background-color 0.2s, color 0.2s;\n\n  &:active,\n  &:target {\n    background: #982929;\n    color: #e3e3e3;\n  }\n`;\n\nexport default TodoList;\n","import React, { FunctionComponent } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport styled from \"styled-components\";\n\nimport history from \"../utils/history\";\nimport CreateTodo from \"./CreateTodo\";\nimport TodoList from \"./TodoList\";\n\nimport \"./App.css\";\n\ninterface AppProps {\n  children: any;\n}\n\nconst Skeleton: FunctionComponent<AppProps> = (props: AppProps) => {\n  return (\n    <Wrapper>\n      <Card>{props.children}</Card>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n  @media all and (min-width: 780px) {\n    padding: 2rem;\n  }\n`;\nconst Card = styled.div`\n  padding: 2rem 1rem;\n  width: 100vw;\n  @media all and (min-width: 780px) {\n    background: #e2e2e2;\n    border-radius: 16px;\n    box-shadow: 20px 20px 60px #c0c0c0, -20px -20px 60px #ffffff;\n    max-width: 60rem;\n    padding: 2rem;\n    width: 80vw;\n  }\n`;\n\n// Routes\nexport default () => (\n  <ConnectedRouter history={history}>\n    <Switch>\n      <Route path=\"/\" exact>\n        <Skeleton>\n          <CreateTodo />\n          <TodoList />\n        </Skeleton>\n      </Route>\n    </Switch>\n  </ConnectedRouter>\n);\n","import React, { FunctionComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport createMiddleware from \"redux-saga\";\nimport { routerMiddleware } from \"connected-react-router\";\n\n// import * as serviceWorker from './serviceWorker';\nimport configureStore from \"./store\"; // eslint-disable-line import/default\nimport history from \"./utils/history\";\nimport createRootReducer from \"./reducers\";\nimport sagas from \"./sagas\";\nimport App from \"./components/App\";\n\nconst sagaMiddleware = createMiddleware();\nconst rootReducer = createRootReducer(history);\nconst store = configureStore(rootReducer, [\n  sagaMiddleware,\n  routerMiddleware(history)\n]);\nsagaMiddleware.run(sagas);\n\nconst render = (Component: FunctionComponent) =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <Component />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\nrender(App);\n\n// if (module.hot) {\n//   module.hot.accept('./routes', () => {\n//     const NextApp = require('./routes').default;\n//     render(NextApp);\n//   });\n// }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}